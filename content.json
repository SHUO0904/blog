{"meta":{"title":"HOME","subtitle":null,"description":null,"author":null,"url":"https://shuo0904.github.io/blog","root":"/blog/"},"pages":[],"posts":[{"title":"","slug":"20191026_git","date":"2019-10-26T07:52:42.336Z","updated":"2019-10-26T09:44:22.367Z","comments":true,"path":"2019/10/26/20191026_git/","link":"","permalink":"https://shuo0904.github.io/blog/2019/10/26/20191026_git/","excerpt":"","text":"git 介绍和使用git是分布式版本控制系统，SVN是集中式版本控制系统 集中式版本控制系统，版本库是集中存放在中央服务器，每次编写、修改、提取、上传等操作，首先需从中央服务器取得最新的版本，后进行编写等，完成后重新推送到中央服务器。且必须联网才能工作。 分布式版本控制系统，无中央服务器，项目组内成员每人的电脑是一个完整的版本库。如：A在自己电脑改了文件C，B也在自己电脑上改了文件C，此时，A和B只需把各自修改推送给对方，就可以看见对方的修改。 git 安装 搜索git，进入(https://www.git-scm.com/download/)，点击下载 点击安装包，点击“下一步”，安装时选择“Use git from git bash only…”，其它默认 安装完后，检查是否已经配置环境变量 配置git用户名和邮箱 12341. 右键-git bash2. git config --global user.name \"用户名\"3. git config --global user.email \"邮箱\"4. 检查是否配置成功，查看C:\\User\\电脑登录名\\.gitconfig 为了在本地和远程仓库之间进行 免秘钥登录，可以配置ssh(具体可在网站搜索)) git常用命令 本地项目 -远程项目关联 12git init //本地项目文件夹右建-gitbashgit remote add orign github仓库名地址 第一次将本地代码发布到远程仓库 123git add . /git add file.txt //本地文件-本地暂存区,add 可以添加多个文件git commit -m '注释内容' //暂存区-本地分支仓库-默认master)git push -u origin master 第一次下载从远程仓库下载项目 1git clone 远程仓库.git 将本地代码提交到远程仓库 1234在当前项目文件夹-右键-git bashgit add .git commit -m '提交到分支' //git push origin master 将远程仓库的内容拉取到本地仓库分支 1git pull 12345678910git status //查看仓库的当前状态git log --pretty=oneline //查看历史记录commit_idgit reset --hard commit_id //返回到commit_id版本git reflog //记录命令历史git checkout -b dev分支 //创建dev分支并切换到dev分支git branch //列出所有分支git checkout master //切换到master分支git switch -c dev //创建并切换到新的dev分支git merge dev // 合并指定分支到当前分支git branch -d dev //删除dev分支 工作区(Working Directory)：项目文件夹 版本库(Repository):工作区有个隐藏的.git,是git的版本库。版本库中stage(或者叫index)的暂存区 把文件往Git版本库里添加的时候，是分两步执行的： 用git add把文件添加进去，实际上就是把文件修改添加到暂存区 用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支","categories":[],"tags":[]},{"title":"关于我","slug":"about-me","date":"2019-10-19T09:06:41.000Z","updated":"2019-10-19T09:17:46.233Z","comments":true,"path":"2019/10/19/about-me/","link":"","permalink":"https://shuo0904.github.io/blog/2019/10/19/about-me/","excerpt":"","text":"平时喜欢整理个人博客，逛逛技术论坛。 了解一些 前端 基本概念和 Python 的简单用法。","categories":[],"tags":[]},{"title":"关于转载","slug":"copyright-reprinted","date":"2019-10-19T08:07:51.000Z","updated":"2019-10-19T09:05:06.844Z","comments":true,"path":"2019/10/19/copyright-reprinted/","link":"","permalink":"https://shuo0904.github.io/blog/2019/10/19/copyright-reprinted/","excerpt":"","text":"尊重原创，从我做起 😂 相互学习，欢迎转载，转载时请加上原文链接！","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-10-14T10:59:22.425Z","updated":"2019-10-14T10:59:22.425Z","comments":true,"path":"2019/10/14/hello-world/","link":"","permalink":"https://shuo0904.github.io/blog/2019/10/14/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}